# Используем официальный образ Python
FROM python:3.13-alpine

# Устанавливаем рабочую директорию
WORKDIR /app

# Устанавливаем переменные окружения для Python
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Устанавливаем Poetry
RUN pip install poetry==2.1.3 # Укажите версию poetry, которая у вас установлена локально или желаемую

# Копируем файлы проекта (только необходимые для установки зависимостей)
COPY pyproject.toml /app/

# Устанавливаем зависимости проекта без dev-зависимостей и создаем .venv в /app
# --no-root нужен, чтобы не устанавливать сам проект как пакет, а только его зависимости
RUN poetry config virtualenvs.in-project true && \
    poetry install --no-interaction --no-ansi --no-root

# Копируем остальной код приложения
COPY ./app /app/app

# Команда для запуска приложения
# Используем .venv/bin/python для запуска из виртуального окружения Poetry
# CMD ["poetry", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
# Для продакшена --reload лучше убрать. Для разработки он полезен.
# Порт 8000 будет использоваться внутри контейнера.
EXPOSE 8000

# Запускаем uvicorn через poetry run, чтобы он использовал виртуальное окружение
# --host 0.0.0.0 делает сервер доступным снаружи контейнера
# --reload полезен для разработки, чтобы сервер перезапускался при изменениях кода.
# Для продакшена --reload лучше убрать и, возможно, использовать больше воркеров.
CMD ["poetry", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]